// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type GetTaxRequest struct {
	// Hydrates entities in relations when passed true
	Hydrate *bool `queryParam:"style=form,explode=true,name=hydrate"`
	// The tax id
	TaxID string `pathParam:"style=simple,explode=false,name=taxId"`
}

func (o *GetTaxRequest) GetHydrate() *bool {
	if o == nil {
		return nil
	}
	return o.Hydrate
}

func (o *GetTaxRequest) GetTaxID() string {
	if o == nil {
		return ""
	}
	return o.TaxID
}

type GetTaxResponse struct {
	// Any error based on client data errors
	ClientError *shared.ClientError
	// HTTP response content type for this operation
	ContentType string
	// Any error based on the server-side
	ServerError *shared.ServerError
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Tax entity response
	Tax *shared.Tax
}

func (o *GetTaxResponse) GetClientError() *shared.ClientError {
	if o == nil {
		return nil
	}
	return o.ClientError
}

func (o *GetTaxResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetTaxResponse) GetServerError() *shared.ServerError {
	if o == nil {
		return nil
	}
	return o.ServerError
}

func (o *GetTaxResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetTaxResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetTaxResponse) GetTax() *shared.Tax {
	if o == nil {
		return nil
	}
	return o.Tax
}
