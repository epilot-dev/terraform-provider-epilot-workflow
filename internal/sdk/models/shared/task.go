// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-workflow/internal/sdk/internal/utils"
)

type TaskUnionType string

const (
	TaskUnionTypeTaskBase       TaskUnionType = "TaskBase"
	TaskUnionTypeAutomationTask TaskUnionType = "AutomationTask"
	TaskUnionTypeDecisionTask   TaskUnionType = "DecisionTask"
)

type Task struct {
	TaskBase       *TaskBase       `queryParam:"inline"`
	AutomationTask *AutomationTask `queryParam:"inline"`
	DecisionTask   *DecisionTask   `queryParam:"inline"`

	Type TaskUnionType
}

func CreateTaskTaskBase(taskBase TaskBase) Task {
	typ := TaskUnionTypeTaskBase

	return Task{
		TaskBase: &taskBase,
		Type:     typ,
	}
}

func CreateTaskAutomationTask(automationTask AutomationTask) Task {
	typ := TaskUnionTypeAutomationTask

	return Task{
		AutomationTask: &automationTask,
		Type:           typ,
	}
}

func CreateTaskDecisionTask(decisionTask DecisionTask) Task {
	typ := TaskUnionTypeDecisionTask

	return Task{
		DecisionTask: &decisionTask,
		Type:         typ,
	}
}

func (u *Task) UnmarshalJSON(data []byte) error {

	var automationTask AutomationTask = AutomationTask{}
	if err := utils.UnmarshalJSON(data, &automationTask, "", true, nil); err == nil {
		u.AutomationTask = &automationTask
		u.Type = TaskUnionTypeAutomationTask
		return nil
	}

	var decisionTask DecisionTask = DecisionTask{}
	if err := utils.UnmarshalJSON(data, &decisionTask, "", true, nil); err == nil {
		u.DecisionTask = &decisionTask
		u.Type = TaskUnionTypeDecisionTask
		return nil
	}

	var taskBase TaskBase = TaskBase{}
	if err := utils.UnmarshalJSON(data, &taskBase, "", true, nil); err == nil {
		u.TaskBase = &taskBase
		u.Type = TaskUnionTypeTaskBase
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Task", string(data))
}

func (u Task) MarshalJSON() ([]byte, error) {
	if u.TaskBase != nil {
		return utils.MarshalJSON(u.TaskBase, "", true)
	}

	if u.AutomationTask != nil {
		return utils.MarshalJSON(u.AutomationTask, "", true)
	}

	if u.DecisionTask != nil {
		return utils.MarshalJSON(u.DecisionTask, "", true)
	}

	return nil, errors.New("could not marshal union type Task: all fields are null")
}
