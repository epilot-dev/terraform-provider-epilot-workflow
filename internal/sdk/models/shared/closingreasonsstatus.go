// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ClosingReasonsStatus string

const (
	ClosingReasonsStatusActive   ClosingReasonsStatus = "ACTIVE"
	ClosingReasonsStatusInactive ClosingReasonsStatus = "INACTIVE"
)

func (e ClosingReasonsStatus) ToPointer() *ClosingReasonsStatus {
	return &e
}
func (e *ClosingReasonsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		*e = ClosingReasonsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClosingReasonsStatus: %v", v)
	}
}
