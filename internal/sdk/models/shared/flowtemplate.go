// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-workflow/internal/sdk/internal/utils"
)

type FlowTemplate struct {
	AssignedTo []string `json:"assigned_to,omitempty"`
	// Indicates whether this workflow is available for End Customer Portal or not. By default it's not.
	AvailableInEcp *bool             `json:"available_in_ecp,omitempty"`
	ClosingReasons []ClosingReasonID `json:"closing_reasons,omitempty"`
	// ISO String Date & Time
	CreatedAt   *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	DueDate     *string `json:"due_date,omitempty"`
	// Set due date for the task based on a dynamic condition
	DueDateConfig *DueDateConfig `json:"due_date_config,omitempty"`
	Edges         []Edge         `json:"edges"`
	// Whether the workflow is enabled or not
	Enabled *bool   `default:"true" json:"enabled"`
	ID      *string `json:"id,omitempty"`
	Name    string  `json:"name"`
	Phases  []Phase `json:"phases,omitempty"`
	Tasks   []Task  `json:"tasks"`
	// Taxonomy ids that are associated with this workflow and used for filtering
	Taxonomies             []string                 `json:"taxonomies,omitempty"`
	UpdateEntityAttributes []UpdateEntityAttributes `json:"update_entity_attributes,omitempty"`
	// ISO String Date & Time
	UpdatedAt *string `json:"updated_at,omitempty"`
}

func (f FlowTemplate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FlowTemplate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FlowTemplate) GetAssignedTo() []string {
	if o == nil {
		return nil
	}
	return o.AssignedTo
}

func (o *FlowTemplate) GetAvailableInEcp() *bool {
	if o == nil {
		return nil
	}
	return o.AvailableInEcp
}

func (o *FlowTemplate) GetClosingReasons() []ClosingReasonID {
	if o == nil {
		return nil
	}
	return o.ClosingReasons
}

func (o *FlowTemplate) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *FlowTemplate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *FlowTemplate) GetDueDate() *string {
	if o == nil {
		return nil
	}
	return o.DueDate
}

func (o *FlowTemplate) GetDueDateConfig() *DueDateConfig {
	if o == nil {
		return nil
	}
	return o.DueDateConfig
}

func (o *FlowTemplate) GetEdges() []Edge {
	if o == nil {
		return []Edge{}
	}
	return o.Edges
}

func (o *FlowTemplate) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *FlowTemplate) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *FlowTemplate) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *FlowTemplate) GetPhases() []Phase {
	if o == nil {
		return nil
	}
	return o.Phases
}

func (o *FlowTemplate) GetTasks() []Task {
	if o == nil {
		return []Task{}
	}
	return o.Tasks
}

func (o *FlowTemplate) GetTaxonomies() []string {
	if o == nil {
		return nil
	}
	return o.Taxonomies
}

func (o *FlowTemplate) GetUpdateEntityAttributes() []UpdateEntityAttributes {
	if o == nil {
		return nil
	}
	return o.UpdateEntityAttributes
}

func (o *FlowTemplate) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
