// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImmediateScheduleMode string

const (
	ImmediateScheduleModeImmediate ImmediateScheduleMode = "immediate"
)

func (e ImmediateScheduleMode) ToPointer() *ImmediateScheduleMode {
	return &e
}
func (e *ImmediateScheduleMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "immediate":
		*e = ImmediateScheduleMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImmediateScheduleMode: %v", v)
	}
}

type ImmediateSchedule struct {
	Mode *ImmediateScheduleMode `json:"mode,omitempty"`
}

func (o *ImmediateSchedule) GetMode() *ImmediateScheduleMode {
	if o == nil {
		return nil
	}
	return o.Mode
}
